name: "[Dispatch] Release"

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch를 입력해주세요(master와 release-x.y.z만 허용)'
        required: true
        default: 'master'
      version:
        description: 'version을 입력해주세요(x.y.z)'
        required: true
        default: '1.0.0'

env:
  BRANCH: ${{ github.event.inputs.branch }}
  VERSION: ${{ github.event.inputs.version }}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

jobs:
  tagging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}

      - name: tagging
        run: |
          git config user.email admin@cloudforet.io
          git config user.name cloudforet-admin
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  docker:
    needs: tagging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_IMAGE_CLEANER_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_IMAGE_CLEANER_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      run: aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.DEV_IMAGE_CLEANER_AWS_ECR_REPO_NAME }}

    - name: Build and push (ECR)
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DEV_IMAGE_CLEANER_AWS_ECR_REPO_NAME }}:${{ github.event.inputs.tag }}

      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  notification:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,ref,workflow,job
          author_name: Github Action Slack