name: "[dispatch] release all core services"
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch를 입력해주세요(master와 release-x.y.z만 허용)'
        required: true
        default: 'master'
      version:
        description: 'version을 입력해주세요(x.y.z)'
        required: true
        default: '1.0.0'
      beginning:
        description: 'release의 첫 시작인 경우 true를 넣어주세요'
        required: false

env:
  BRANCH: ${{ github.event.inputs.branch }}
  VERSION: ${{ github.event.inputs.version }}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

jobs:
  core_console:
    if: github.repository_owner == 'cloudforet-io'
    runs-on: ubuntu-latest
    steps:
      - name: task
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repo: cloudforet-io/console
          workflow: dispatch_release.yaml
          inputs: '{"branch": "${{ env.BRANCH }}", "version": "${{ env.VERSION }}"}'

  core_console_api:
    needs: core_console
    runs-on: ubuntu-latest
    steps:
      - name: task
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repo: cloudforet-io/console-api
          workflow: dispatch_release.yaml
          inputs: '{"branch": "${{ env.BRANCH }}", "version": "${{ env.VERSION }}"}'

  core_python_service:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        target: ['identity', 'secret', 'repository', 'plugin', 'config', 'inventory', 'monitoring', 'statistics', 'cost-analysis', 'notification', 'board', 'file-manager', 'dashboard', 'console-api-v2', 'supervisor']
    needs: core_console_api
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: task if not beginning
        if: ${{ !github.event.inputs.beginning }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repo: cloudforet-io/${{ matrix.target }}
          workflow: dispatch_release.yaml
          inputs: '{"branch": "${{ env.BRANCH }}", "version": "${{ env.VERSION }}"}'

      - name: task if beginning
        if: ${{ github.event.inputs.beginning }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repo: cloudforet-io/${{ matrix.target }}
          workflow: dispatch_release.yaml
          inputs: '{"branch": "${{ env.BRANCH }}", "version": "${{ env.VERSION }}", "beginning": "true"}'

  tools:
    strategy:
      fail-fast: false
      matrix:
        target: ['spacectl', 'image-cleaner']
    needs: core_python_service
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: task
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repo: cloudforet-io/${{ matrix.target }}
          workflow: dispatch_release.yaml
          inputs: '{"branch": "${{ env.BRANCH }}", "version": "${{ env.VERSION }}"}'

  doc:
    strategy:
      fail-fast: false
      matrix:
        target: ['api-doc', 'docs', 'marketplace-assets']
    needs: tools
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: task
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repo: cloudforet-io/${{ matrix.target }}
          workflow: dispatch_release.yaml
          inputs: '{"branch": "${{ env.BRANCH }}", "version": "${{ env.VERSION }}"}'

  notify_to_slack:
    needs: [doc]
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
